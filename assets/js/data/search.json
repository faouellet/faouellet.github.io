[ { "title": "Of source control and databases - Annex C - Further developments", "url": "/dvcs-next/", "categories": "Of source control and databases", "tags": "Source Control, Database", "date": "2021-02-09 00:00:00 -0500", "snippet": "All the code for the articles in this series can be found here.For those of you interested in deepening your understanding of distributed source control systems, here are some projects to extend DVCSUS’ capabilities: Implement a clone command Implement a merge command Implement a rebase comman..." }, { "title": "Of source control and databases - Annex B - Error management", "url": "/dvcs-error/", "categories": "Of source control and databases", "tags": "Source Control, Database", "date": "2021-02-08 00:00:00 -0500", "snippet": "All the code for the articles in this series can be found here.To cap off this series, I wanted to talk about how I approached error management in DVCSUS. I already went into details for some parts (for instance, how I decided to deal with streaming errors). However, I didn’t offer a global reaso..." }, { "title": "Of source control and databases - Annex A - Testing strategies", "url": "/dvcs-tests/", "categories": "Of source control and databases", "tags": "Source Control, Database", "date": "2021-02-07 00:00:00 -0500", "snippet": "All the code for the articles in this series can be found here.While programming something new is always fun, there comes a time when we have to put our invention to the test. Can the thing we created stand the test of reality?So far, you, the reader, had to blindly assume that what I was showing..." }, { "title": "Of source control and databases - Part 5 - Remote support (ish)", "url": "/dvcs-remote/", "categories": "Of source control and databases", "tags": "Source Control, Database", "date": "2021-02-06 00:00:00 -0500", "snippet": "All the code for the articles in this series can be found here.As with the previous article, we’ll now look at an extension to my original programming assignment. This time we’ll teach DVCSUS about remote repositories.InterfaceOne of the cornerstones of distributed source control is the ability t..." }, { "title": "Of source control and databases - Part 4 - Branches support", "url": "/dvcs-branch/", "categories": "Of source control and databases", "tags": "Source Control, Database", "date": "2021-02-05 00:00:00 -0500", "snippet": "All the code for the articles in this series can be found here.For this article and the next, we’ll be looking at some functionalities that weren’t included in my original programming assignment. Up first is the adding branch support to DVCSUS.InterfaceEven if branches are a supplementary feature..." }, { "title": "Of source control and databases - Part 3 - Committing changes", "url": "/dvcs-commit/", "categories": "Of source control and databases", "tags": "Source Control, Database", "date": "2021-02-04 00:00:00 -0500", "snippet": "All the code for the articles in this series can be found here.In this article, we’ll explain how we can make public previously staged modifications with the commit command.InterfaceTo continue with the theme of simplicity, the commit command will also be as bare bones as can be. This means that ..." }, { "title": "Of source control and databases - Part 2 - Adding changes", "url": "/dvcs-add/", "categories": "Of source control and databases", "tags": "Source Control, Database", "date": "2021-02-03 00:00:00 -0500", "snippet": "All the code for the articles in this series can be found here.Now that the users can create a new repository through the init command, we can start filling it out. This will be the purpose of the add command that we’ll look at in this article.InterfaceAs was the case with the init command, I str..." }, { "title": "Of source control and databases - Part 1 - Initializing a repository", "url": "/dvcs-init/", "categories": "Of source control and databases", "tags": "Source Control, Database", "date": "2021-02-02 00:00:00 -0500", "snippet": "All the code for the articles in this series can be found here.The (obvious) first step in our endeavor is to allow users to set up a repository. To this end, we’ll offer them an init command.InterfaceBefore going into the implementation of the init command, we need to know its requirements. If w..." }, { "title": "Of source control and databases - Part 0 - Overview", "url": "/dvcs-intro/", "categories": "Of source control and databases", "tags": "Source Control, Database", "date": "2021-02-01 00:00:00 -0500", "snippet": "All the code for the articles in this series can be found here.Once again, I offer you an adaptation of some content I developed in my previous life as a teaching assistant. This time, I’ll be walking you through an alternative solution to what was the first homework I usually gave in a course on..." }, { "title": "On reviewing code", "url": "/codereview/", "categories": "", "tags": "Software Development", "date": "2020-10-12 00:00:00 -0400", "snippet": "All the code for this article can be found here.ForewordAs with the Refactoring 101 article, this article is an adaptation of materials I made for a class that I once contributed to as a teaching assistant. As such, the targeted audiences are students and junior developers who don’t have much exp..." }, { "title": "Refactoring 101", "url": "/refactoring/", "categories": "", "tags": "Software Development", "date": "2020-09-07 00:00:00 -0400", "snippet": "All the code for this article can be found here.ForewordThis article is adapted from materials that I gave to students of a course that I helped rebuild from the ground up. The intent is to demonstrate the whys and hows of refactoring while going through a (as close as possible) real-world exampl..." }, { "title": "Trying out different interpreter implementations", "url": "/interpreter/", "categories": "", "tags": "Interpreter", "date": "2020-07-14 00:00:00 -0400", "snippet": "All the code for this article can be found here.I’ve always been fascinated by video game console emulators. How could they even make a random computer act like something it’s not as if it was a teenager trying to fit in with the “cool” crowd. Working on my first emulator back when I was an under..." }, { "title": "Building a build system - Part 3 - Parallel Compilation", "url": "/bst-par/", "categories": "Building a build system", "tags": "Build System", "date": "2018-04-28 00:00:00 -0400", "snippet": "At this point in the series, our build system does everything we wanted it to. Throw a simple source code repository at it and it’ll bring you back an application. Why don’t we call it quits now and move on to better things?You’re right, we could. But imagine for a second that you’re in the middl..." }, { "title": "Building a build system - Part 2 - Compilation", "url": "/bst-comp/", "categories": "Building a build system", "tags": "Build System", "date": "2018-03-31 00:00:00 -0400", "snippet": "Have you ever sat in a data structures or algorithms class wondering why the teacher spend so much time on graph theory? Isn’t graph theory only useful for cracking the code interview? (I still can’t believe a course like this exists) There’s nobody in their right mind that would use graph to sol..." }, { "title": "Building a build system - Part 1 - Dependency graph", "url": "/bst-dg/", "categories": "Building a build system", "tags": "Build System", "date": "2018-02-28 00:00:00 -0500", "snippet": "How hard could it be to produce an executable out of some C++ files?Compiling a C++ application (the wrong way)A knee-jerk response to the question could be: “Not much! I just need to compile each of the files and then link the resulting object files together into an executble. There, done!”Imagi..." }, { "title": "Building a build system - Part 0 - Intro", "url": "/bst-intro/", "categories": "Building a build system", "tags": "Build System", "date": "2018-01-31 00:00:00 -0500", "snippet": "In the fall of 2017, I had the opportunity to help a friend working at the University of Sherbrooke rebuild a course from the ground up. This course, IGL 601, had unfortunately devolved over the years into something that barely had anything to do with modern software development. Which is really ..." }, { "title": "A deadlock-detecting mutex", "url": "/ddmutex/", "categories": "", "tags": "C++, Concurrency", "date": "2017-05-07 00:00:00 -0400", "snippet": "All the code for this article can be found here.Here’s an idea for you: wouldn’t it be nice if a mutex could warn us that we’re going to deadlock the very moment we’re trying to acquire it? It may sounds far-fetched but it is very doable but it is probably quite simpler than you imagine.A bit of ..." }, { "title": "AMPR", "url": "/ampr/", "categories": "", "tags": "C++, C++AMP, Parallelism, GPGPU", "date": "2016-11-19 00:00:00 -0500", "snippet": "All the code for this article can be found here.Have you ever asked yourself: how do regexes works? Or, even better, have you ever thought that you could totally implement a regex engine that would be faster than what powers std::regex? If not, than you’re probably took a wrong turn somewhere on ..." }, { "title": "Homemade data race detector", "url": "/race-detection/", "categories": "", "tags": "C++, Parallelism", "date": "2016-10-10 00:00:00 -0400", "snippet": "Note 1: What I’m presenting here is evidently not a production grade tool. In fact, I’d say it barely even qualify as a proof of concept. If you really want to debug multithreaded programs, please use a tool like Intel Inspector, ThreadSanitizer or Helgrind.Note 2: While everything here is presen..." }, { "title": "Python-like enumeration in C++", "url": "/enumerate/", "categories": "", "tags": "C++", "date": "2016-09-11 00:00:00 -0400", "snippet": "Story timeDuring a recent conversation with one of the architects at the company I work for, an interesting topic came up. While talking, about range-based for loops, he mentionned that there was quite a few fellow developpers that would love to have access to the index of an element without havi..." }, { "title": "The joys and pains of unrestricted unions", "url": "/unrestricted-unions/", "categories": "", "tags": "C++", "date": "2016-08-19 00:00:00 -0400", "snippet": "One of the less talked about features of C++11 are unrestricted unions. In this post, I’ll explain what they are, how they’ve been useful to me and why we’ll quickly forget about them in the future.Story timeOnce upon a time, back when I was working on TosLang, I set out to write an interpreter f..." }, { "title": "Let&#39;s implement a language - Hiatus", "url": "/toslang-hiatus/", "categories": "TosLang", "tags": "", "date": "2016-08-05 00:00:00 -0400", "snippet": " Almost nothing good ever come after thisIt seems that Tostitos/TosLang will be put on hiatus indefinitely. The fact is that in the last few months this project has been abandonned by all involved except me. And to be honest, even I have somewhat lost interest in it. That’s sad, bu..." }, { "title": "Let&#39;s implement a language - Part 3 - The Parser", "url": "/toslang-parser/", "categories": "TosLang", "tags": "Compiler Development", "date": "2016-07-01 00:00:00 -0400", "snippet": "Hey everyone!Continuing our journey toward a fully working compiler, we will now build the parser that will allow us to produce an AST out of program we received as input. Ever closer to being done with the frontendHowever, before diving into the parser, some things must be taken c..." }, { "title": "Let&#39;s implement a language - Part 2 - The AST", "url": "/toslang-ast/", "categories": "TosLang", "tags": "Compiler Development", "date": "2016-06-03 00:00:00 -0400", "snippet": "Hey everyone!Last time, we opened up the black box that is a modern compiler to see that it what is fact three black boxes linked together. Those three againWe then delved into the frontend of the compiler to discover that (surprise!) once again we can divide it up into three black..." }, { "title": "Let&#39;s implement a language - Part 1 - The Lexer", "url": "/toslang-lexer/", "categories": "TosLang", "tags": "Compiler Development", "date": "2016-05-06 00:00:00 -0400", "snippet": "Hey everyone!This month marks the beginning of our journey into compiler development territory. For our first steps, we’ll start with an overview of modern compiler architecture and the development of a lexer capable of handling the TosLang programming language.As you read along, you might notice..." }, { "title": "Let&#39;s implement a language - Part 0 - Intro", "url": "/toslang-intro/", "categories": "TosLang", "tags": "", "date": "2016-04-01 00:00:00 -0400", "snippet": "Hey everyone!Starting this month, I’ll take you through my personal journey to develop a compiler for a language of my own design. While the next posts in this series will be quite technical, I’d like to start off by offering a global view of what I’ll try to accomplish and the reasoning behind s..." }, { "title": "CS Games 2015 Parallelism Challenge - A More Efficient Solution", "url": "/csgames-efficient/", "categories": "CS Games 2015 Parallelism Challenge", "tags": "Parallelism", "date": "2016-03-03 00:00:00 -0500", "snippet": "What’s up people!Last time, we went over some potential solutions for a problem given during the parallelism challenge. As you may remember (if you don’t, go here), I put a special emphasis on not trying to go overboard with threads. My reasoning was that trying to start as many threads as possib..." }, { "title": "CS Games 2015 Parallelism Challenge - A Simple Solution", "url": "/csgames-simple/", "categories": "CS Games 2015 Parallelism Challenge", "tags": "Parallelism", "date": "2016-02-05 00:00:00 -0500", "snippet": "What’s up people!Now that a month has passed, surely you have found a, at least simple, solution to the challenge? Now, as I promised last month, let’s go over a simple solution for this challenge……or not!See, after pondering the thought for a while, I’ve decided against publishing a full solutio..." }, { "title": "CS Games 2015 Parallelism Challenge - Introduction", "url": "/csgames-intro/", "categories": "CS Games 2015 Parallelism Challenge", "tags": "", "date": "2016-01-04 00:00:00 -0500", "snippet": "Last year, I had the the pleasure to be involved with the CS Games. For those who don’t know what they are (and are to lazy to google it), the CS Games are a competition that take place every year and pit teams of CS and engineering students against one another in a series of various challenges. ..." } ]
